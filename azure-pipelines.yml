trigger:
- master

pool:
  vmImage: ubuntu-latest

jobs:
- job: build
  displayName: Build Node Package
  steps:
  - task: PowerShell@2
    name: check
    displayName: Check Node Version
    inputs:
      targetType: inline
      script: |
        $package = Get-Content package.json | ConvertFrom-Json
        $checkVersion = npm view "$($package.name)@$($package.version)"
        if ($checkVersion) {
          Write-Host "##vso[task.setvariable variable=Package.Version;isOutput=true]$($package.version)"
          Write-Host "##vso[task.setvariable variable=Package.VersionExists;isOutput=true]true"
        } else {
          Write-Host "##vso[task.setvariable variable=Package.VersionExists;isOutput=true]false"
        }
      pwsh: true

  - task: NodeTool@0
    inputs:
      versionSpec: 14.x
    displayName: Install Node.js

  - task: YarnInstaller@3
    inputs:
      versionSpec: 1.x
    displayName: Install Yarn

  - script: |
      yarn
      yarn test
    displayName: Test

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: JUnit
      testResultsFiles: '**/test_results.xml'
      testRunTitle: Jest Tests

- job: release
  displayName: Release Node Package
  condition: and(succeeded(), ne(dependencies.build.outputs['check.Package.VersionExists'], 'true'))
  dependsOn: build
  variables:
    Package.Version: $[ dependencies.build.outputs['check.Package.Version'] ]
  steps:
  - task: GitHubRelease@1
    displayName: Release on GitHub
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      gitHubConnection: 'johnnyhuy-github'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(Package.Version)'
      title: 'Release $(Package.Version)'
      releaseNotesSource: 'inline'
      releaseNotesInline: 'Release of the GGSMark Node package!'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
    
  - task: Npm@1
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      command: publish
      publishEndpoint: johnnyhuy-npm
    displayName: Publish Node package
